// buildscript 代码块中脚本优先执行
buildscript {

	// ext 用于定义动态属性
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
			
	// 自定义 Elasticsearch 的版本
	//ext['elasticsearch.version'] = '3.0.0'
	
	// 使用了 Maven 的中央仓库（你也可以指定其他仓库）
	repositories {
		//mavenCentral()
		maven {
			url 'http://maven.aliyun.com/nexus/content/groups/public/'
		}
	}
	// 依赖关系
	dependencies {
		// classpath 声明说明了在执行其余的脚本时，ClassLoader 可以使用这些依赖项
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
	
}

// 使用插件
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

// 打包的类型为 jar，并指定了生成的打包的文件名称和版本
jar {
	baseName = 'springboot-elastic'
	version = '1.0.0'
}

group = 'com.zshuai'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

// 默认使用了 Maven 的中央仓库。这里改用自定义的镜像库
repositories {
	//mavenCentral()
	maven {
		url 'http://maven.aliyun.com/nexus/content/groups/public/'
	}
}
configurations {
	//remove default logger
	all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

// 依赖关系
dependencies {
	// 该依赖对于编译发行是必须的
	compile('org.springframework.boot:spring-boot-starter-web'){
		exclude module: 'spring-boot-starter-logging'
	}
	//添加log4j2依赖
	compile('org.springframework.boot:spring-boot-starter-log4j2:1.5.2.RELEASE')
	
	// 添加  Spring Data Elasticsearch 的依赖
	compile('org.springframework.boot:spring-boot-starter-data-elasticsearch')
	//compile('org.springframework.data:spring-data-elasticsearch:3.1.3.RELEASE')
	// 添加  JNA 的依赖 ，集成es需要这个依赖，不然会报classNotfound错误
	compile('net.java.dev.jna:jna:4.3.0')
	
	// 该依赖对于编译测试是必须的，默认包含编译产品依赖和编译时依
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
